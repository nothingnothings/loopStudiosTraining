









CRIAMOS O HAMBURGER ICON,


MAS AGORA VAMOS CRIAR O MOBILE MENU (sidebar),





E ENTÃO ADICIONAREMOS O JAVASCRIPT 


PARA QUE 



SEJA POSSÍVEL 



ADICIONAR E REMOVER A CLASS DE 'OPEN' 



AO HAMBURGER ICON, PARA QUE ELE SEJA ANIMADO,

E TAMBÉM 
PARA QUE 


NOSSO MOBILE MENU APAREÇA...








ESCREVEMOS TIPO ASSIM:







        <div
          id="menu"
          class="absolute top-0 bottom-0 left-0 hidden flex-col self-end w-full min-h-screen py-1 pt-40 pl-12 space-y-3 text-lg text-white uppercase bg-black"
        >
          <a href="#" class="hover:text-pink-500">About</a>
          <a href="#" class="hover:text-pink-500">Careers</a>
          <a href="#" class="hover:text-pink-500">Events</a>
          <a href="#" class="hover:text-pink-500">Products</a>
          <a href="#" class="hover:text-pink-500">Support</a>
        </div>














O TRUQUE, PARA ESSA SIDEBAR, É ASSIM:










'''ASSIM QUE ENTRAMOS NO SITE, O DISPLAY DE ESSE MOBILE SIDEBAR ESTÁ COMO HIDDEN... 
QUER DIZER QUE O DISPLAY ESTÁ COMO __ NONE__...''




''O DISPLAY SOMENTE FICARÁ COMO 'flex' (ou seja, visível) 
    QUANDO CLICARMOS NO BURGER MENU, QUE SÓ EXISTIRÁ EM TELAS MENORES...''









--> O BURGER MENU VAI TRIGGAR A TROCA ENTRE AS CLASSES DE 'display' e 'HIDDEN',
    nessa sidebar... e é isso que vai mostrar/esconder a sidebar...





PRECISAMOS ESCOLHER O BURGER BUTTON, E AÍ A SIDEBAR TAMBÉM....





TIPO ASSIM:





const hamburgerButton = document.getElementById('menu-btn');
const menu = document.getElementById('menu');

hamburgerButton.addEventListener('click', () => {
  hamburgerButton.classList.toggle('open');
  menu.classList.toggle('hidden');
});







E ASSIM:




        <div
          id="menu"
          class="absolute top-0 bottom-0 left-0 hidden flex-col self-end w-full min-h-screen py-1 pt-40 pl-12 space-y-3 text-lg text-white uppercase bg-black"
        >
          <a href="#" class="hover:text-pink-500">About</a>
          <a href="#" class="hover:text-pink-500">Careers</a>
          <a href="#" class="hover:text-pink-500">Events</a>
          <a href="#" class="hover:text-pink-500">Products</a>
          <a href="#" class="hover:text-pink-500">Support</a>
        </div>







E ASSIM:







          <!-- HAMBURGER BUTTON -->
          <div class="md:hidden">
            <button
              type="button"
              id="menu-btn"
              class="open z-40 block hamburger md:hidden focus:outline-none"
            >
              <span class="hamburger-top"></span>
              <span class="hamburger-middle"></span>
              <span class="hamburger-bottom"></span>
            </button>
          </div>










ALGO ASSIM,

NA VERDADE:








const hamburgerButton = document.getElementById('menu-btn');
const menu = document.getElementById('menu');

hamburgerButton.addEventListener('click', () => {
  hamburgerButton.classList.toggle('open');
  menu.classList.toggle('hidden');
  menu.classList.toggle('flex');
});


















E, NO INDEX.HTML,



IMPORTO O SCRIPT ASSIM:






  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Alata&family=Josefin+Sans:ital,wght@0,100..700;1,100..700&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="style.css" />
    <script src="script.js" defer></script>
  </head>













OK... FUNCIONOU...









USAREMOS ALGO PARECIDO EM PROJETOS FUTUROS...